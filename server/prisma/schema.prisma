// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// FIXME: Remember to update the migration file
// npx
// prisma migrate diff --from-empty --to-schema-datamodel pri
// sma/schema.prisma --script > prisma/migrations/0_init/migr
// ation.sql
model WorkerJob {
  jobId    String  @id
  workerId String?
  task     String
  title    String
  queue    String?
  payload  Json?
  error    String?

  status      JobStatus @default(PENDING)
  attempts    Int       @default(0)
  maxAttempts Int

  // This is a bit of a "temporary" hack to address the fact that with a worker queue, we can't store return results
  // in the same way. Since we also don't want to model the entire Match > Label > Job hierarchy in the database yet,
  // this is a reasonable compromise between jankiness and functionality to keep us moving forward.
  // Maybe in the future we could replace this with a single reference to the video or match the job relates to.
  youTubeVideoId          String?
  addedToYouTubePlaylist  Boolean?
  linkedOnTheBlueAlliance Boolean?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum JobStatus {
  // Job has not been run yet
  PENDING
  // Job is in progress
  STARTED
  // Job failed but can be retried
  FAILED_RETRYABLE
  // Job has permanently failed and will not be retried
  FAILED
  // Job completed successfully.
  COMPLETED
}
