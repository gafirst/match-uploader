// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_CONNECTION_STRING")
}

// npx prisma migrate diff --from-empty --to-schema-datamodel prisma/schema.prisma --script > prisma/migrations/0_init/migration.sql
model WorkerJob {
  jobId    String  @id
  workerId String?
  task     String
  title    String
  queue    String?
  payload  Json?
  error    String?

  status      JobStatus @default(PENDING)
  attempts    Int       @default(0)
  maxAttempts Int

  // This is a bit of a "temporary" hack to address the fact that with a worker queue, we can't store return results
  // in the same way. Since we also don't want to model the entire Match > Label > Job hierarchy in the database yet,
  // this is a reasonable compromise between jankiness and functionality to keep us moving forward.
  // Maybe in the future we could replace this with a single reference to the video or match the job relates to.
  youTubeVideoId          String?
  addedToYouTubePlaylist  Boolean?
  linkedOnTheBlueAlliance Boolean?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UploadedVideo UploadedVideo[]
}

enum JobStatus {
  // Job has not been run yet
  PENDING
  // Job is in progress
  STARTED
  // Job failed but can be retried
  FAILED_RETRYABLE
  // Job has permanently failed and will not be retried
  FAILED
  // Job completed successfully.
  COMPLETED
}

// FIXME: Generate migration for changes
model AutoRenameAssociation {
  eventKey               String // FIXME: Add a legacy default value for this for backwards-compatibility in migration script
  filePath               String
  videoFile              String
  status                 AutoRenameAssociationStatus @default(UNMATCHED)
  statusReason           String?
  videoTimestamp         DateTime?
  startTimeDiffSecs      Int?
  videoDurationSecs      Int?
  startTimeDiffAbnormal  Boolean?
  videoDurationAbnormal  Boolean?
  orderingIssueMatchKey  String?
  orderingIssueMatchName String?

  associationAttempts    Int     @default(0)
  maxAssociationAttempts Int     @default(5)
  matchKey               String?
  matchName              String?
  videoLabel             String

  renameAfter     DateTime?
  renameJobId     String?
  renameCompleted Boolean   @default(false)
  newFileName     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([eventKey, filePath], name: "id")
  @@unique([eventKey, filePath], name: "associationIdentifier")
}

enum AutoRenameAssociationStatus {
  // No association has been made yet
  UNMATCHED
  // Max attempts for associations was reached
  FAILED
  // A weak association (requires human review) was made
  WEAK
  // A strong association was made (manually set by a human, manually approved by a human, or automatically classified
  // as strong)
  STRONG
  // Do not try to associate this file again / TODO: Implement this everywhere else
  IGNORED
}

model AutoRenameMetadata {
  eventKey                       String
  label                          String
  lastStrongAssociationMatchKey  String?
  lastStrongAssociationMatchName String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([eventKey, label], name: "id")
}

model UploadedVideo {
  youTubeVideoId String     @id @unique
  workerJobId    String?
  workerJob      WorkerJob? @relation(fields: [workerJobId], references: [jobId])

  filePath String
  matchKey String
  eventKey String

  label String

  addToYouTubePlaylistSucceeded  Boolean?
  linkOnTheBlueAllianceSucceeded Boolean?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
